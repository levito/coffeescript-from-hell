tmp/js/bundle.js:2749: WARNING - Suspicious code. This code lacks side-effects. Is there a bug?
      condPart = this.stepNum ? parseNum(this.stepNum[0]) > 0 ? "" + lt + " " + this.toVar : "" + gt + " " + this.toVar : known ? ((_ref3 = [parseNum(this.fromNum[0]), parseNum(this.toNum[0])], from = _ref3[0], to = _ref3[1], _ref3), from <= to ? "" + lt + " " + to : "" + gt + " " + to) : (cond = this.stepVar ? "" + this.stepVar + " > 0" : "" + this.fromVar + " <= " + this.toVar, "" + cond + " ? " + lt + " " + this.toVar + " : " + gt + " " + this.toVar);
                                                                                                                                                                                                                                  ^

tmp/js/bundle.js:4173: WARNING - Suspicious code. The result of the 'void' operator is not being used.
      catchPart = this.recovery ? (placeholder = new Literal('_error'), this.errorVariable ? this.recovery.unshift(new Assign(this.errorVariable, placeholder)) : void 0, [].concat(this.makeCode(" catch ("), placeholder.compileToFragments(o), this.makeCode(") {\n"), this.recovery.compileToFragments(o, LEVEL_TOP), this.makeCode("\n" + this.tab + "}"))) : !(this.ensure || this.recovery) ? [this.makeCode(' catch (_error) {}')] : [];
                                                                                                                                                                  ^

tmp/js/bundle.js:5449: WARNING - unreachable code
    return true;
    ^

tmp/js/bundle.js:6380: WARNING - Suspicious code. This code lacks side-effects. Is there a bug?
    for (; up--; up) {
                 ^

0 error(s), 4 warning(s)
